{"version":3,"sources":["../../src/controller/cycle-count-request.js"],"names":["config","db","api","post","req","res","newCycleCountRequest","countRequests","body","requestor","save","err","send","json","message","findById","params","id","cycleCountRequest","newCountRequest","inventoryID","binLocations","_id","countRequest","push","get","find","cycleCountRequests"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;kBAEc,gBAAmB;AAAA,MAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAC/B,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CAAS,MAAT,iCAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5C,QAAIC,uBAAuB,iCAA3B;AACAA,yBAAqBC,aAArB,GAAqCH,IAAII,IAAJ,CAASD,aAA9C;AACAD,yBAAqBG,SAArB,GAAiCL,IAAII,IAAJ,CAASC,SAA1C;;AAEAH,yBAAqBI,IAArB,CAA0B,eAAO;AAC/B,UAAIC,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,UAAIQ,IAAJ,CAAS,EAACC,SAAS,wCAAV,EAAT;AACD,KALD;AAMD,GAXD;;AAaA;AACAZ,MAAIC,IAAJ,CAAS,8BAAT,iCAAwD,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpE,gCAAkBU,QAAlB,CAA2BX,IAAIY,MAAJ,CAAWC,EAAtC,EAA0C,UAACN,GAAD,EAAMO,iBAAN,EAA4B;AACpE,UAAIP,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACD,UAAIQ,kBAAkB,4BAAtB;;AAEAA,sBAAgBC,WAAhB,GAA8BhB,IAAII,IAAJ,CAASY,WAAvC;AACAD,sBAAgBE,YAAhB,GAA+BjB,IAAII,IAAJ,CAASa,YAAxC;AACAF,sBAAgBD,iBAAhB,GAAoCA,kBAAkBI,GAAtD;AACAH,sBAAgBT,IAAhB,CAAqB,UAACC,GAAD,EAAMY,YAAN,EAAuB;AAC1C,YAAIZ,GAAJ,EAAS;AACPN,cAAIO,IAAJ,CAASD,GAAT;AACD;AACDO,0BAAkBX,aAAlB,CAAgCiB,IAAhC,CAAqCL,eAArC;AACAD,0BAAkBR,IAAlB,CAAuB,UAACC,GAAD,EAAS;AAC9B,cAAIA,GAAJ,EAAS;AACPN,gBAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,cAAIQ,IAAJ,CAAS,EAACC,SAAS,kCAAV,EAAT;AACD,SALD;AAMD,OAXD;AAYD,KArBD;AAsBD,GAvBD;;AAyBA;AACAZ,MAAIuB,GAAJ,CAAQ,GAAR,iCAA4B,UAACrB,GAAD,EAAMC,GAAN,EAAc;AACxC,gCAAkBqB,IAAlB,CAAuB,EAAvB,EAA2B,UAACf,GAAD,EAAMgB,kBAAN,EAA6B;AACtD,UAAIhB,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,UAAIQ,IAAJ,CAASc,kBAAT;AACD,KALD;AAMD,GAPD;;AASA,SAAOzB,GAAP;AACD,C","file":"cycle-count-request.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport CycleCountRequest from '../model/cycle-count-request';\nimport CountRequest from '../model/count-request';\nimport { authentitcate } from '../middleware/auth-middleware';\n\nexport default({ config, db}) => {\n  let api = Router();\n\n  // 'v1/cycle-count-request/add - Create\n  api.post('/add', authentitcate, (req, res) => {\n    let newCycleCountRequest = new CycleCountRequest();\n    newCycleCountRequest.countRequests = req.body.countRequests;\n    newCycleCountRequest.requestor = req.body.requestor;\n\n    newCycleCountRequest.save(err => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({message: \"Cycle Count Request successfully saved\"});\n    });\n  });\n\n  // 'v1/cycle-count-request/add/:id - Add cycle count items\n  api.post('/cycle-count-request/add/:id', authentitcate, (req, res) => {\n    CycleCountRequest.findById(req.params.id, (err, cycleCountRequest) => {\n      if (err) {\n        res.send(err);\n      }\n      let newCountRequest = new CountRequest();\n\n      newCountRequest.inventoryID = req.body.inventoryID;\n      newCountRequest.binLocations = req.body.binLocations;\n      newCountRequest.cycleCountRequest = cycleCountRequest._id;\n      newCountRequest.save((err, countRequest) => {\n        if (err) {\n          res.send(err);\n        }\n        cycleCountRequest.countRequests.push(newCountRequest);\n        cycleCountRequest.save((err) => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({message: 'Count request successfully added'});\n        });\n      });\n    });\n  });\n\n  // 'v1/cycle-count-request - Read\n  api.get('/', authentitcate, (req, res) => {\n    CycleCountRequest.find({}, (err, cycleCountRequests) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(cycleCountRequests);\n    });\n  });\n\n  return api;\n}"]}