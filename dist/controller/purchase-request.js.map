{"version":3,"sources":["../../src/controller/purchase-request.js"],"names":["config","db","api","post","req","res","newPurchaseRequest","inventoryID","body","quantity","shippingMethod","requestor","save","err","send","json","message","get","find","purchaseRequests"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;kBAEc,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAChC,MAAIC,MAAM,sBAAV;;AAEF;AACEA,MAAIC,IAAJ,CAAS,MAAT,iCAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5C,QAAIC,qBAAqB,+BAAzB;AACAA,uBAAmBC,WAAnB,GAAiCH,IAAII,IAAJ,CAASD,WAA1C;AACAD,uBAAmBG,QAAnB,GAA8BL,IAAII,IAAJ,CAASC,QAAvC;AACAH,uBAAmBI,cAAnB,GAAoCN,IAAII,IAAJ,CAASE,cAA7C;AACAJ,uBAAmBK,SAAnB,GAA+BP,IAAII,IAAJ,CAASG,SAAxC;;AAEAL,uBAAmBM,IAAnB,CAAwB,eAAO;AAC7B,UAAIC,GAAJ,EAAS;AACPR,YAAIS,IAAJ,CAASD,GAAT;AACC;AACDR,UAAIU,IAAJ,CAAS,EAAEC,SAAS,qCAAX,EAAT;AACH,KALD;AAMD,GAbD;;AAeA;AACAd,MAAIe,GAAJ,CAAQ,GAAR,iCAA4B,UAACb,GAAD,EAAMC,GAAN,EAAc;AACxC,8BAAgBa,IAAhB,CAAqB,EAArB,EAAwB,UAACL,GAAD,EAAMM,gBAAN,EAA2B;AACjD,UAAIN,GAAJ,EAAS;AACPR,YAAIS,IAAJ,CAASD,GAAT;AACD;AACDR,UAAIU,IAAJ,CAASI,gBAAT;AACC,KALH;AAMC,GAPH;;AASE,SAAOjB,GAAP;AACH,C","file":"purchase-request.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport PurchaseRequest from '../model/purchase-request';\nimport { authentitcate } from '../middleware/auth-middleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n// '/v1/purchase-request/add - Create\n  api.post('/add', authentitcate, (req, res) => {\n    let newPurchaseRequest = new PurchaseRequest();\n    newPurchaseRequest.inventoryID = req.body.inventoryID;\n    newPurchaseRequest.quantity = req.body.quantity;\n    newPurchaseRequest.shippingMethod = req.body.shippingMethod;\n    newPurchaseRequest.requestor = req.body.requestor;\n\n    newPurchaseRequest.save(err => {\n      if (err) {\n        res.send(err);\n        }\n        res.json({ message: 'Purchase Request saved successfully'});\n    });\n  });\n\n  // 'v1/purchase-request - Read\n  api.get('/', authentitcate, (req, res) => {\n    PurchaseRequest.find({},(err, purchaseRequests) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(purchaseRequests);\n      });\n    });\n\n    return api;\n}"]}