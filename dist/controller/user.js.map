{"version":3,"sources":["../../src/controller/user.js"],"names":["config","db","api","post","req","res","register","name","body","username","password","err","account","console","log","status","send","authenticate","session","scope","get","logout","json","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,MAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,mBAAKC,QAAL,CAAc,mBAAS,EAAEC,MAAMH,IAAII,IAAJ,CAASC,QAAjB,EAAT,CAAd,EAAoDL,IAAII,IAAJ,CAASE,QAA7D,EAAuE,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAC5F,UAAID,GAAJ,EAAS;AACP,YAAGA,IAAIJ,IAAJ,KAAa,iBAAhB,EAAmC;AACjCM,kBAAQC,GAAR,CAAY,aAAZ;AACA,iBAAOT,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAArB,CAAP;AACD,SAHD,MAGO;AACL,iBAAON,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAArB,CAAP;AACD;AACF;;AAED,yBAASM,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGKd,GAHL,EAGUC,GAHV,EAGe,YAAM;AACjBA,YAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD,OALH;AAMD,KAhBD;AAiBD,GAlBD;;AAoBA;AACAd,MAAIC,IAAJ,CAAS,QAAT,EAAmB,mBAASc,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPC,WAAO;AAFA,GADQ,CAAnB;;AAMA;AACAjB,MAAIkB,GAAJ,CAAQ,SAAR,+BAAiC,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAC7CA,QAAIgB,MAAJ;AACAhB,QAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAKA;AACAd,MAAIkB,GAAJ,CAAQ,KAAR,+BAA6B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIU,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBlB,IAAImB,IAAzB;AACD,GAFD;;AAIA,SAAOrB,GAAP;AACD,C","file":"user.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport User from '../model/user';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/auth-middleare';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/v1/account'\n  // need to add User.role to the register endpoint\n  api.post('/register', (req, res) => {\n    User.register(new User({ name: req.body.username}), req.body.password, function(err, account) {\n      if (err) {\n        if(err.name === \"UserExistsError\") {\n          console.log(\"User Exists\");\n          return res.status(409).send(err);\n        } else {\n          return res.status(500).send(err);\n        }\n      }\n\n      passport.authenticate(\n        'local', {\n          session: false\n        })(req, res, () => {\n          res.status(200).send('Successfully created new account');\n        });\n    });\n  });\n\n  // 'v1/account/login'\n  api.post('/login', passport.authenticate(\n    'local', {\n      session: false,\n      scope: []\n    }), generateAccessToken, respond);\n\n  // 'v1/account/logout'\n  api.get('/logout', authenticate, (req, res) => {\n    res.logout();\n    res.status(200).send('Successfully logged out');\n  });\n\n  // 'v1/account/me\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  });\n\n  return api;\n}"]}